<?xml version='1.0' encoding='utf-8'?>
<!DOCTYPE hibernate-configuration PUBLIC
        "-//Hibernate/Hibernate Configuration DTD//EN"
        "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
    <session-factory>
        <!-- property 元素用于配置Hibernate中的属性键:值 -->

        <!-- DB schema will be updated if needed -->
        <property name="hbm2ddl.auto">update</property>
        <property name="connection.driver_class">com.mysql.jdbc.Driver</property>
        <property name="hibernate.connection.url">jdbc:mysql://localhost:3306/mydb?useSSL=false</property>
        <property name="hibernate.connection.username">root</property>
        <property name="hibernate.connection.password">catv.com</property>
        <!-- show_sql: 操作数据库时,会 向控制台打印sql语句 -->
        <property name="show_sql">true</property>
        <!-- format_sql: 打印sql语句前,会将sql语句先格式化  -->
        <property name="format_sql">true</property>



        <!-- hbm2ddl.auto: 生成表结构的策略配置
            update(最常用的取值): 如果当前数据库中不存在表结构,那么自动创建表结构.
                    如果存在表结构,并且表结构与实体一致,那么不做修改
                    如果存在表结构,并且表结构与实体不一致,那么会修改表结构.会保留原有列.
            create(很少):无论是否存在表结构.每次启动Hibernate都会重新创建表结构.(数据会丢失)
            create-drop(极少): 无论是否存在表结构.每次启动Hibernate都会重新创建表结构.每次Hibernate运行结束时,删除表结构.
            validate(很少):不会自动创建表结构.也不会自动维护表结构.Hibernate只校验表结构. 如果表结构不一致将会抛出异常.
         -->
        <!-- 数据库方言配置
        org.hibernate.dialect.MySQLDialect (选择最短的)
        -->
        <property name="hibernate.connection.pool_size">100</property>
        <property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect</property>
        <!-- hibernate.connection.autocommit: 事务自动提交  -->
        <property name="hibernate.connection.autocommit">true</property>
        <!-- 将Session与线程绑定=> 只有配置了该配置,才能使用getCurrentSession -->
        <property name="hibernate.current_session_context_class">thread</property>
        <!-- 引入ORM 映射文件
            填写src之后的路径
         -->
        <!--下面这个放在最后-->
        <mapping resource="com/lct/employee.hbm.xml"/>
    </session-factory>
</hibernate-configuration>